<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于js两个定时器</title>
      <link href="/2022/10/30/%E5%85%B3%E4%BA%8Ejs%E4%B8%A4%E4%B8%AA%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
      <url>/2022/10/30/%E5%85%B3%E4%BA%8Ejs%E4%B8%A4%E4%B8%AA%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="关于-js-两个定时器"><a href="#关于-js-两个定时器" class="headerlink" title="关于 js 两个定时器"></a>关于 js 两个定时器</h2><span id="more"></span><h2 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout()"></a>setTimeout()</h2><p><strong>间隔一定时间只会执行一次，返回值是一个 number 类型的值</strong></p><ol><li>在指定的毫秒数到达之后执行指定的函数,只执行一次</li><li>设置定时器是 setTimeout()，会返回一个 number 类型的值，清除定时器要使用 clearTimeout()</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;, delay);</span><br><span class="line"><span class="built_in">clearTimeout</span>(timeId);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个定时器，1000毫秒后执行，返回定时器的标示</span></span><br><span class="line"><span class="keyword">var</span> timerId = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消定时器的执行</span></span><br><span class="line"><span class="built_in">clearTimeout</span>(timerId);</span><br></pre></td></tr></table></figure><hr><h2 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval()"></a>setInterval()</h2><p><strong>每间隔一段时间不间断的一直执行下去</strong></p><ol><li>定时调用的函数,可以按照给定的时间(单位毫秒)周期性的调用函数</li><li>设置定时器是 setInterval()，会返回一个 number 类型的值，清除定时器要使用 clearInterval()</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;, delay);</span><br><span class="line"><span class="built_in">clearInterval</span>(timeId);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个定时器，每隔1秒调用一次</span></span><br><span class="line"><span class="keyword">var</span> timerId = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">toLocaleTimeString</span>());</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消定时器的执行</span></span><br><span class="line"><span class="built_in">clearInterval</span>(timerId);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2022/10/06/Hexo/"/>
      <url>/2022/10/06/Hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-搭建记录"><a href="#Hexo-搭建记录" class="headerlink" title="Hexo 搭建记录"></a>Hexo 搭建记录</h2><span id="more"></span><h2 id="准备工作（环境配置）"><a href="#准备工作（环境配置）" class="headerlink" title="准备工作（环境配置）"></a>准备工作（环境配置）</h2><ul><li><strong>node.js 16.15.0</strong></li><li><strong>git 2.38.1 windows.1</strong></li><li><strong>github 仓库&#x2F;线上服务器</strong></li><li><strong>Hexo-cli 4.3.0</strong></li></ul><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo init <span class="comment">// 创建博客框架命令</span></span><br><span class="line"></span><br><span class="line">hexo sever <span class="comment">// 博客启动命令,默认跑在本地localhost:4000端口</span></span><br><span class="line"></span><br><span class="line">hexo <span class="keyword">new</span> 文章名称 <span class="comment">// 创建文章命令</span></span><br><span class="line"></span><br><span class="line">hexo clean <span class="comment">// 清除缓存</span></span><br><span class="line"></span><br><span class="line">hexo d <span class="comment">// 上传博客</span></span><br></pre></td></tr></table></figure><h2 id="常用配置及美化"><a href="#常用配置及美化" class="headerlink" title="常用配置及美化"></a>常用配置及美化</h2><h4 id="实现上传代码到-github"><a href="#实现上传代码到-github" class="headerlink" title="实现上传代码到 github"></a>实现上传代码到 github</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载上传到github的插件，只有下载了插件才能使用 hexo-d 命令上传自己生成的博客</span></span><br><span class="line"></span><br><span class="line">在配置文件进行修改,主要是设置仓库地址的默认分支</span><br><span class="line"><span class="comment">// # Deployment</span></span><br><span class="line"><span class="comment">// ## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy</span>:</span><br><span class="line">  <span class="attr">type</span>: git</span><br><span class="line">  <span class="attr">repository</span>: git@github.<span class="property">com</span>:buildkay/buildkay.<span class="property">github</span>.<span class="property">io</span>.<span class="property">git</span></span><br><span class="line">  <span class="attr">branch</span>: main</span><br></pre></td></tr></table></figure><h4 id="设置网站名称，副标题等可以查看官网。"><a href="#设置网站名称，副标题等可以查看官网。" class="headerlink" title="设置网站名称，副标题等可以查看官网。"></a>设置网站名称，副标题等可以查看官网。</h4><p>下载主题，这个博客使用的是 next 主题，这个主题，就我目前来看到的就有三个版本。所以，安装时请不要原封不动的照着网上查到的资料抄，看清楚版本。然后放到 theme 文件夹。</p><h4 id="大体上的基础配置。"><a href="#大体上的基础配置。" class="headerlink" title="大体上的基础配置。"></a>大体上的基础配置。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以下严格意义上说是对next主题的配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 更改hexo皮肤设置把默认值更改,这一步注意是hexo的配置文件。</span><br><span class="line"><span class="comment">// # Extensions</span></span><br><span class="line"><span class="comment">// ## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">// ## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme</span>: next</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 设置各个分页面</span><br><span class="line"><span class="comment">// # Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment">// # Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-sensitive.</span></span><br><span class="line"><span class="comment">// # Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment">// # External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu</span>:</span><br><span class="line">  <span class="attr">home</span>: / || fa fa-home</span><br><span class="line">  <span class="attr">about</span>: <span class="regexp">/about/</span> || fa fa-user</span><br><span class="line">  <span class="attr">tags</span>: <span class="regexp">/tags/</span> || fa fa-tags</span><br><span class="line">  <span class="attr">categories</span>: <span class="regexp">/categories/</span> || fa fa-th</span><br><span class="line">  #<span class="attr">archives</span>: <span class="regexp">/archives/</span> || fa fa-archive</span><br><span class="line">  #<span class="attr">schedule</span>: <span class="regexp">/schedule/</span> || fa fa-calendar</span><br><span class="line">  #<span class="attr">sitemap</span>: /sitemap.<span class="property">xml</span> || fa fa-sitemap</span><br><span class="line">  <span class="attr">commonweal</span>: <span class="regexp">/404/</span> || fa fa-heartbeat</span><br><span class="line"></span><br><span class="line">然后<span class="keyword">new</span>对应的页面，然后就能创建对应的页面了</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 显示个人头像</span><br><span class="line"><span class="comment">// # Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar</span>:</span><br><span class="line"><span class="comment">// # Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url</span>: <span class="regexp">/images/</span>avatar.<span class="property">png</span>  <span class="comment">// #/images/avatar.gif</span></span><br><span class="line"><span class="comment">// # If true, the avatar will be displayed in circle.</span></span><br><span class="line">  <span class="attr">rounded</span>: <span class="literal">false</span></span><br><span class="line"><span class="comment">// # If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated</span>: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// # Posts / Categories / Tags in sidebar.</span></span><br><span class="line"><span class="attr">site_state</span>: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 显示右上角github的头像</span><br><span class="line"><span class="comment">// https://tholman.com/github-corners/</span></span><br><span class="line">首先去网站复制代码，然后将刚才复制的代码粘贴到themes/next/layout/_layout.<span class="property">swig</span>文件中</span><br><span class="line">记得更改href</span><br></pre></td></tr></table></figure><h4 id="添加博客文章全局搜索，一个重要的功能，就单独分出来说了。"><a href="#添加博客文章全局搜索，一个重要的功能，就单独分出来说了。" class="headerlink" title="添加博客文章全局搜索，一个重要的功能，就单独分出来说了。"></a>添加博客文章全局搜索，一个重要的功能，就单独分出来说了。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"></span><br><span class="line"><span class="comment">// # Local Search</span></span><br><span class="line"><span class="comment">// # Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search</span>:</span><br><span class="line">  <span class="attr">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment">// # If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment">// # If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger</span>: auto</span><br><span class="line">  <span class="comment">// # Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article</span>: <span class="number">1</span></span><br><span class="line">  <span class="comment">// # Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape</span>: <span class="literal">false</span></span><br><span class="line"> <span class="comment">//  # Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload</span>: <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/05/hello-world/"/>
      <url>/2022/10/05/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h2><span id="more"></span><p>　　今天，我打算把我以前的博客和笔记再一次整理一下，记得去年在学校里就折腾过，现在回看之前写的文章，感慨还是挺多的，写的那个平台都有（CSDN，掘金……）,主要还是感觉写的好乱，这次还需要把之前的毛病改一下，以前写笔记，连 markdown 的语法都没有好好的看一下，主要还是靠平台。这次依靠框架记录自己的博客也不用再担心自己的文章被和谐了。（平台和谐的太严重了，我就写一个踩坑记录和新工具的使用记录，都不知道哪里不符合社会主义价值观（国内现状））。</p><p>　　这又是一个新的开始，可以锻炼我的文档书写能力，相信我可以坚持下去。</p>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vscode</title>
      <link href="/2022/09/03/Vscode/"/>
      <url>/2022/09/03/Vscode/</url>
      
        <content type="html"><![CDATA[<h2 id="vscode-的简单记录"><a href="#vscode-的简单记录" class="headerlink" title="vscode 的简单记录"></a>vscode 的简单记录</h2><span id="more"></span><h2 id="一，下载"><a href="#一，下载" class="headerlink" title="一，下载"></a>一，下载</h2><p>官方下载：<br><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><p><strong>速度慢的话也可以使用国内镜像</strong><br>例如：<br>官方地址</p><blockquote><p><a href="https://az764295.vo.msecnd.net/stable/">https://az764295.vo.msecnd.net/stable/</a>c185983a683d14c396952dd432459097bc7f757f&#x2F;VSCodeSetup-x64-1.55.0.exe</p></blockquote><p>换算为镜像地址为</p><blockquote><p><a href="https://vscode.cdn.azure.cn/stable/">https://vscode.cdn.azure.cn/stable/</a>c185983a683d14c396952dd432459097bc7f757f&#x2F;VSCodeSetup-x64-1.55.0.exe</p></blockquote><p>重点在于<br><strong>vscode.cdn.azure.cn</strong> 关键在这里</p><hr><h2 id="二，安装"><a href="#二，安装" class="headerlink" title="二，安装"></a>二，安装</h2><p>基本上等于无脑下一步</p><h2 id="三，插件"><a href="#三，插件" class="headerlink" title="三，插件"></a>三，插件</h2><blockquote><p>因插件推荐具有时效性，所以推荐安装后自行百度下载所需插件</p></blockquote><hr><h2 id="四，我的常用配置"><a href="#四，我的常用配置" class="headerlink" title="四，我的常用配置"></a>四，我的常用配置</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;workbench.iconTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eq-material-theme-icons-light&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;liveServer.settings.donotShowInfoMsg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.codeActionsOnSave&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// &quot;source.organizeImports&quot;: true</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;liveServer.settings.root&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;liveServer.settings.host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;liveServer.settings.port&quot;</span><span class="punctuation">:</span> <span class="number">5500</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;liveServer.settings.AdvanceCustomBrowserCmdLine&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.bracketPairColorization.enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;workbench.startupEditor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;terminal.external.windowsExec&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Users\\BuildKay\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JetBrains Mono, Consolas, monospace&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;explorer.confirmDelete&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;terminal.integrated.fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Consolas&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.codeLensFontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JetBrains Mono&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;workbench.colorTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Material Theme Darker High Contrast&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">/*  prettier的配置 */</span></span><br><span class="line">  <span class="attr">&quot;[html]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[javascript]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[typescript]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[javascriptreact]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[typescriptreact]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[less]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[css]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[scss]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[json]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[jsonc]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;prettier.printWidth&quot;</span><span class="punctuation">:</span> <span class="number">80</span><span class="punctuation">,</span> <span class="comment">// 超过最大值换行</span></span><br><span class="line">  <span class="attr">&quot;prettier.tabWidth&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="comment">// 缩进字节数</span></span><br><span class="line">  <span class="attr">&quot;prettier.useTabs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// 缩进不使用tab，使用空格</span></span><br><span class="line">  <span class="attr">&quot;prettier.semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">//句尾添加分号</span></span><br><span class="line">  <span class="attr">&quot;prettier.singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">//单引号代替双引号</span></span><br><span class="line">  <span class="comment">// &quot;prettier.arrowParens&quot;: &quot;avoid&quot;, //  (x) =&gt; &#123;&#125; 箭头函数参数只有一个时是否要有小括号。avoid：省略括号</span></span><br><span class="line">  <span class="attr">&quot;prettier.ignorePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.prettierignore&quot;</span><span class="punctuation">,</span> <span class="comment">// 不使用prettier格式化的文件填写在项目的.prettierignore文件中</span></span><br><span class="line">  <span class="attr">&quot;prettier.jsxSingleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// 在jsx中使用单引号代替双引号</span></span><br><span class="line">  <span class="attr">&quot;prettier.requireConfig&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// Require a &#x27;prettierconfig&#x27; to format prettier</span></span><br><span class="line">  <span class="attr">&quot;prettier.trailingComma&quot;</span><span class="punctuation">:</span> <span class="string">&quot;es5&quot;</span><span class="punctuation">,</span> <span class="comment">// 在对象或数组最后一个元素后面是否加逗号（在ES5中加尾逗号）</span></span><br><span class="line">  <span class="comment">//其他配置</span></span><br><span class="line">  <span class="attr">&quot;editor.bracketPairColorization.independentColorPoolPerBracketType&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// &quot;editor.unicodeHighlight.allowedLocales&quot;: &#123;</span></span><br><span class="line">  <span class="comment">//   &quot;zh-hant&quot;: true</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line">  <span class="attr">&quot;editor.unicodeHighlight.allowedCharacters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.tabSize&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.semanticTokenColorCustomizations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;emmet.useInlineCompletions&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;explorer.compactFolders&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;files.eol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2022/10/21/b456a2ee90a3126f.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/2022/09/02/Git/"/>
      <url>/2022/09/02/Git/</url>
      
        <content type="html"><![CDATA[<h2 id="git-介绍"><a href="#git-介绍" class="headerlink" title="git 介绍"></a>git 介绍</h2><span id="more"></span><p>​ Git 是一款免费、开源的<strong>分布式</strong> <strong>版本控制系统</strong> ，用于敏捷高效地处理任何或小或大的项目。</p><p>版本控制系统在项目开发中作用重大，主要的功能有以下几点</p><ul><li><p>代码备份</p></li><li><p>版本回退</p></li><li><p>协作开发</p></li><li><p>权限控制</p></li></ul><p><img src="https://img-blog.csdnimg.cn/2e5eb84df1d74292804dbc16f674ae1b.gif#pic_center" alt="在这里插入图片描述"></p><hr><h2 id="git-的安装"><a href="#git-的安装" class="headerlink" title="git 的安装"></a>git 的安装</h2><p><a href="https://git-scm.com/">https://git-scm.com/</a></p><p><a href="https://mirrors.huaweicloud.com/home">https://mirrors.huaweicloud.com/home</a></p><hr><h2 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h2><ul><li><p>cd 进入某一个文件夹内 （change directory 缩写） cd .. 回到上一级 Tab 键自动补全路径</p></li><li><p>ls 查看文件夹下的文件 （list 单词的缩写）</p></li><li><p>clear 清屏（也可以使用 ctrl + l 快捷键）</p></li><li><p>mkdir 创建文件夹（make directory） 可以一次性创建多个文件夹</p></li><li><p>touch test.html 创建一个文件</p></li><li><p>rm test.html 删除文件 remove</p></li><li><p>rm dir -r 删除文件夹 (-r 删除文件夹选项 -f 强制) force</p></li><li><p>mv test.html t.html 移动文件，重命名 move 缩写</p></li><li><p>cat test.html 查看文件内容</p></li><li><p>ctrl + c 取消命令 (cancel)</p></li><li><p>Tab 自动补齐路径</p></li><li><p>上下方向键，可以查看命令历史 (history 查看所有的历史命令)</p></li></ul><hr><h2 id="VIM-编辑器简单操作"><a href="#VIM-编辑器简单操作" class="headerlink" title="VIM 编辑器简单操作"></a>VIM 编辑器简单操作</h2><ul><li><p>vim test.html 编辑文件（文件不存在则创建）</p></li><li><p>i 进入编辑模式(i insert)</p></li><li><p>ESC + :wq 保存并退出</p></li><li><p>ESC + :q! 不保存并退出</p></li></ul><hr><h2 id="GIT-常规操作"><a href="#GIT-常规操作" class="headerlink" title="GIT 常规操作"></a>GIT 常规操作</h2><h3 id="git-三个区"><a href="#git-三个区" class="headerlink" title="git 三个区"></a>git 三个区</h3><p>​ 要对某个项目使用 git 进行管理，需要使用<code>git init</code>命令初始化 git 仓库 <code>git init</code>会在当前目录生成一个隐藏文件夹 .git 不要去修改这个文件夹下的任意东西。</p><p>git 仓库会分成三个区</p><p><strong>工作区</strong>：我们书写代码的地方，工作的目录就叫工作区。</p><p><strong>暂存区</strong>暂时存储的区域，在 git 中，代码无法直接从工作区提交到仓库区，而是需要先从工作区添加到暂存区，然后才能从暂存区提交到仓库区。暂存区的目的是避免误操作。</p><p><strong>仓库区</strong>将保存在暂存区域的内容永久转储到 Git 仓库中，生成版本号。生成版本号之后，就可以任何的回退到某一个具体的版本。</p><hr><h3 id="git-基本命令"><a href="#git-基本命令" class="headerlink" title="git 基本命令"></a>git 基本命令</h3><p><strong>git init</strong></p><p>作用：初始化 git 仓库，想要使用 git 对某个项目进行管理，需要 git init 进行初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化仓库， 在当前目录下生成一个隐藏文件夹.git</span></span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p><strong>git add</strong></p><p>作用：将文件由 工作区 添加到 暂存区，在 git 中，文件无法直接从工作区直接添加到仓库区，必须先从工作区添加到暂存区，再从暂存区添加到仓库区。</p><p>命令：git add 文件名&#x2F;目录名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将index.html添加到暂存区</span></span><br><span class="line">git add index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将css目录下所有的文件添加到暂存区</span></span><br><span class="line">git add css</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加当前目录下所有的文件</span></span><br><span class="line">git add .</span><br><span class="line">git add --all</span><br></pre></td></tr></table></figure><p><strong>git commit</strong></p><p>作用：将文件由 <strong>暂存区</strong> 添加到 <strong>仓库区</strong>，生成版本号（存档）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将文件从暂存区提交到仓库</span></span><br><span class="line">git commit -m <span class="string">&quot;提交说明&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不写提交说明，会进入vi编辑器，没有写提交说明，是提交不成功的。 :q!来退出</span></span><br><span class="line">git commit   <span class="comment"># 需要使用vi输入内容  vi编辑器常用操作</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>git config 配置</strong></p><p>如果是第一次提交，需要配置提交者信息，推荐和 github 的账号邮箱一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git config  user.name 你的目标用户名</span></span><br><span class="line"><span class="comment"># git config  user.email 你的目标邮箱名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用--global参数，配置全局的用户名和邮箱，只需要配置一次即可。推荐配置github的用户名和密码</span></span><br><span class="line">git config  --global user.name  皮皮虾</span><br><span class="line">git config  --global user.email 812316676@qq.com</span><br></pre></td></tr></table></figure><p>如果是之前已经配置了，想清空的话，可以使用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&#x27;&#x27;</span></span><br><span class="line">git config --global user.email <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>git status</strong></p><ul><li>作用：查看文件的状态</li></ul><p>命令：git status</p><p>红色表示工作区中的文件需要提交</p><p>绿色表示暂存区中的文件需要提交</p><p><strong>git log</strong></p><p>作用：查看提交日志</p><p><code>git log</code> 查看提交的日志 不包括回退过的版本</p><p><code>git log --oneline</code> 简洁的日志信息</p><p><code>git reflog</code> 查看<strong>所有的</strong>版本信息 ，包括回退的操作</p><hr><h3 id="git-重置或版本回退"><a href="#git-重置或版本回退" class="headerlink" title="git 重置或版本回退"></a>git 重置或版本回退</h3><p><strong>git reset</strong></p><p>作用：版本回退，将代码恢复到已经提交的某一个版本中。</p><p><code>git reset --hard 版本号</code> 将代码回退到某个指定的版本(版本号只要有前几位即可)</p><p>当使用了<code>git reset</code>命令后，版本会回退，使用<code>git log</code>只能看到<strong>当前版本</strong>之前的信息。使用<code>git reflog</code>可以查看所有的版本信息</p><hr><h3 id="git-忽略文件"><a href="#git-忽略文件" class="headerlink" title="git 忽略文件"></a>git 忽略文件</h3><p><strong>在仓库或项目代码中，有些文件是不想被 git 管理的，比如数据的配置密码、写代码的一些思路，node_modules 等。git 可以通过配置从而达到忽视掉一些文件，这样这些文件就可以不用提交了。</strong></p><ol><li><p>在仓库或当前项目的根目录创建一个<code>.gitignore</code>的文件，文件名是固定的。</p></li><li><p>将不需要被 git 管理的文件路径添加到<code>.gitignore</code>中</p></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 忽视idea<span class="selector-class">.txt</span>文件</span><br><span class="line">idea<span class="selector-class">.txt</span></span><br><span class="line"></span><br><span class="line"># 忽视css下的index<span class="selector-class">.js</span>文件</span><br><span class="line">css/index<span class="selector-class">.js</span></span><br><span class="line"></span><br><span class="line"># 忽视css下的所有的js文件</span><br><span class="line">css<span class="comment">/*.js</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 忽视css文件夹</span></span><br><span class="line"><span class="comment">css</span></span><br></pre></td></tr></table></figure><hr><h2 id="git-分支操作"><a href="#git-分支操作" class="headerlink" title="git 分支操作"></a>git 分支操作</h2><p>分支就是科幻电影里面的平行宇宙，当你正在电脑前努力学习 Git 的时候，另一个你正在另一个平行宇宙里努力学习 SVN。</p><p>如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，你既学会了 Git 又学会了 SVN！</p><h3 id="为什么要有分支？"><a href="#为什么要有分支？" class="headerlink" title="为什么要有分支？"></a>为什么要有分支？</h3><ol><li><p>如果你要开发一个新的功能，需要 2 周时间，第一周你只能写 50%代码，如果此时立即提交，代码没写完，不完整的代码会影响到别人无法工作。如果等代码写完再提交，代码很容易丢失，风险很大。</p></li><li><p>有了分支，你就可以创建一个属于自己的分支，别人看不到，也不影响别人，你在自己的分支上工作，提交到自己的分支上，等到功能开发完毕，一次性的合并到原来的分支。这样既安全，又不影响他人工作。</p></li></ol><hr><h3 id="git-分支命令"><a href="#git-分支命令" class="headerlink" title="git 分支命令"></a>git 分支命令</h3><p>在 git 中，分支实质上仅仅是一个指针，每次代码提交后，这个分支指针就会向后移动，保证一直指向最后一次提交的的版本。git 中使用 HEAD 指向当前分支</p><p><strong>创建分支</strong></p><ol><li><p><code>git branch 分支名称</code>创建分支，分支中的代码，在创建时与当前分支的内容完全相同。</p></li><li><p>git 在第一次提交时，就有了一个叫<code>master</code>的主分支。</p></li><li><p><code>git branch dev</code>，创建了一个叫做 dev 的分支</p></li></ol><p><strong>查看分支</strong></p><ol><li><p><code>git branch</code>可以查看所有的分支</p></li><li><p>在当前分支的前面会有一个<code>*</code></p></li><li><p>在 git 中，有一个特殊指针<code>HEAD</code>,永远会指向当前分支</p></li></ol><p><strong>切换分支</strong></p><ol><li><p><code>git checkout 分支名称</code>切换分支 HEAD 指针指向了另一个分支</p></li><li><p>在当前分支的任何操作，都不会影响到其他的分支，除非进行了分支合并。</p></li><li><p>提交代码时，会生产版本号，当前分支会指向最新的版本号。</p></li></ol><p><strong>创建并切换分支</strong></p><ol><li><p><code>git checkout -b 分支名称</code> 创建并切换分支</p></li><li><p>切换分支会做两件事情</p><ul><li><p>创建一个新分支</p></li><li><p>把 head 指针指向当前的分支</p></li></ul></li></ol><p><strong>删除分支</strong></p><ol><li><p><code>git branch -d 分支名称</code> 可以删除分支</p></li><li><p>注意：不能在当前分支删除当前分支，需要切换到其他分支才能删除。</p></li><li><p>注意：<code>master</code>分支是可以删除的，但是不推荐那么做。</p></li></ol><p><strong>合并分支</strong></p><ol><li><p><code>git merge 分支名称</code> 将其他分支的内容合并到当前分支。</p></li><li><p>在<code>master</code>分支中执行<code>git merge dev</code> 将<code>dev</code>分支中的代码合并到<code>master</code>分支</p></li></ol><hr><h2 id="git-合并冲突"><a href="#git-合并冲突" class="headerlink" title="git 合并冲突"></a>git 合并冲突</h2><ol><li><p>对于同一个文件，如果有多个分支需要合并时，容易出现冲突。</p></li><li><p>合并分支时，如果出现冲突，只能手动处理，再次提交，一般的作法，把自己的代码放到冲突代码的后面即可。</p></li></ol><hr><h2 id="git-远程仓库"><a href="#git-远程仓库" class="headerlink" title="git 远程仓库"></a>git 远程仓库</h2><p>github 与 git</p><p>git 与 github 没有直接的关系。</p><ul><li><p>git 是一个版本控制工具。</p></li><li><p>github 是一个<strong>代码托管平台</strong>，开源社区，是 git 的一个远程代码仓库。</p></li><li><p>gitee 是一个国内的代码托管平台，和 github 类似</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一</span></span><br><span class="line"><span class="comment">//的版本库格式进行托管，故名gitHub。</span></span><br><span class="line"><span class="comment">//2. github免费，代码所有人都能看到，但是只有你自己能修改。付费的可以隐藏。</span></span><br><span class="line"><span class="comment">//3. 创建git项目时，不能有中文。</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/">https://github.com/</a></p><p><a href="https://gitee.com/">https://gitee.com/</a></p><hr><h4 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h4><ul><li><p>作用：克隆远程仓库的代码到本地</p></li><li><p>git clone [远程仓库地址]</p></li><li><p><code>git clone https://github.com/guigushop/myCode68.git</code>会在本地新建一个<code>test</code>文件夹，在 test 中包含了一个<code>.git</code>目录，用于保存所有的版本记录，同时 test 文件中还有最新的代码，你可以直接进行后续的开发和使用。</p></li><li><p>git 克隆默认会使用远程仓库的项目名字，也可以自己指定。需要是使用以下命令：<code>git clone [远程仓库地址] [本地项目名]</code></p></li></ul><hr><h4 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h4><ul><li><p>作用：将本地仓库中代码提交到远程仓库</p></li><li><p><code>git push 仓库地址 master</code> 在代码提交到远程仓库，注意 master 分支必须写，不能省略</p></li><li><p>例子：<code>git push https://github.com/guigushop/myCode68.git master</code> 如果第一次使用，需要填写 github 的用户名和密码，现在有了个人 token 之后，就不需要用户名和密码了</p></li><li><p>但是现在的 github 代码托管平台，已经将主分支名称改为了 main 了，所以提交的命令是如下</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push https://github.com/haiten123/myCode20220215.git main</span><br></pre></td></tr></table></figure><hr><h4 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h4><ul><li><p>作用：将远程的代码下载到本地，并和本地的代码进行比对</p></li><li><p>通常在 push 前，需要先 pull 一次。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取远程仓库的更新，并且与本地的分支进行合并</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><hr><h2 id="免密提交"><a href="#免密提交" class="headerlink" title="免密提交"></a>免密提交</h2><h3 id="SSH-免密码登陆"><a href="#SSH-免密码登陆" class="headerlink" title="SSH 免密码登陆"></a>SSH 免密码登陆</h3><p>git 支持多种数据传输协议：</p><ul><li><p>https 协议：<code>https://github.com/你的注册名/test.git</code> 需要输入用户名和密码</p></li><li><p>ssh 协议：<code>git@github.com:你的注册名/test.git</code> 可以配置免密码登录</p></li></ul><p>每次 push 或者 pull 代码，如果使用 https 协议，那么都需要输入用户名和密码进行身份的确认，非常麻烦。</p><ul><li><p>github 为了账户的安全，需要对每一次 push 请求都要验证用户的身份，只有合法的用户才可以 push</p></li><li><p>使用 ssh 协议，配置 ssh 免密码，可以做到免密码往 github 推送代码</p></li></ul><hr><h3 id="SSH-免密码登录配置"><a href="#SSH-免密码登录配置" class="headerlink" title="SSH 免密码登录配置"></a>SSH 免密码登录配置</h3><p>注意：这些命令需要在 bash 中敲</p><ul><li><p>1 创建 SSH Key：<code>ssh-keygen -t rsa</code> &amp;#x20;</p><ul><li><p>key 钥匙的意思</p></li><li><p>gen– generate 生成，产生的意思</p></li></ul></li><li><p>2 在文件路径 <code>C:\用户\当前用户名</code> 找到 <code>.ssh</code> 文件夹</p></li><li><p>3 文件夹中有两个文件：</p><ul><li><p>私钥：<code>id_rsa</code></p></li><li><p>公钥：<code>id_rsa.pub</code> 将公钥添加到 github 当中</p></li></ul></li><li><p>4 在 <code>github -&gt; settings -&gt; SSH and GPG keys</code>页面中，新创建 SSH key</p></li><li><p>5 粘贴 公钥 <code>id_rsa.pub</code> 内容到对应文本框中</p></li><li><p>5 在 github 中新建仓库或者使用现在仓库，拿到<code>git@github.com:用户名/仓库名.git</code></p></li><li><p>6 此后，再次 SSH 方式与 github“通信”，不用输入密码确认身份了</p></li></ul><hr><h4 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h4><p>每次 push 操作都需要带上远程仓库的地址，非常的麻烦，我们可以给仓库地址设置一个别名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 给远程仓库设置一个别名</span></span><br><span class="line">git remote add 仓库别名 仓库地址</span><br><span class="line">git remote add shangpinhui git@github.com:你的注册名/test.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用如下来推送数据</span></span><br><span class="line">git push shangpinhui main</span><br><span class="line"></span><br><span class="line">// 如果第一次提交是如下 代码的话，那么接下来</span><br><span class="line">git push -u shangpinhui main   // 第一次提交时的执行代码</span><br><span class="line">git push   // 后续使用此命令即可提交</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除PPXCode这个别名</span></span><br><span class="line">git remote remove shangpinhui</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具篇 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
